// Code generated by swaggo/swag at 2025-09-15 22:07:41.369201 +0200 CEST m=+0.472920209. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "components": {"schemas":{"auth.AuthResponse":{"properties":{"token":{"type":"string"},"user":{"$ref":"#/components/schemas/auth.UserProfile"}},"type":"object"},"auth.LoginRequest":{"properties":{"login":{"type":"string"},"password":{"type":"string"}},"type":"object"},"auth.SignupRequest":{"properties":{"email":{"type":"string"},"password":{"type":"string"},"username":{"type":"string"}},"type":"object"},"auth.UserProfile":{"properties":{"email":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"username":{"type":"string"}},"type":"object"},"errors.ErrorResponse":{"properties":{"code":{"type":"integer"},"message":{"type":"string"},"type":{"$ref":"#/components/schemas/errors.ErrorType"}},"type":"object"},"errors.ErrorType":{"type":"string","x-enum-varnames":["InternalServerError","Validation","InvalidCredentials","UsernameAlreadyTaken","EmailAlreadyTaken"]},"handlers.HealthResponse":{"properties":{"status":{"type":"string"}},"type":"object"}}},
    "info": {"contact":{"email":"support@swagger.io","name":"API Support","url":"http://www.swagger.io/support"},"description":"{{escape .Description}}","license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"termsOfService":"http://swagger.io/terms/","title":"{{.Title}}","version":"{{.Version}}"},
    "externalDocs": {"description":"","url":""},
    "paths": {"/health":{"get":{"description":"Check if the API is running","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.HealthResponse"}}},"description":"OK"}},"summary":"Health check endpoint","tags":["health"]}},"/v1/auth/login":{"post":{"description":"Authenticate user with username/email and password","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/auth.LoginRequest"}}},"description":"Login request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/auth.AuthResponse"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/errors.ErrorResponse"}}},"description":"Bad Request"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/errors.ErrorResponse"}}},"description":"Internal Server Error"}},"summary":"User login","tags":["auth"]}},"/v1/auth/signup":{"post":{"description":"Create a new user account with username, email and password","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/auth.SignupRequest"}}},"description":"Signup request","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/auth.AuthResponse"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/errors.ErrorResponse"}}},"description":"Bad Request"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/errors.ErrorResponse"}}},"description":"Internal Server Error"}},"summary":"User signup","tags":["auth"]}}},
    "openapi": "3.1.0"
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Title:            "kochen.app server",
	Description:      "this is the server for kochen.app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
